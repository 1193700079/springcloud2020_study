server:
  port: 9527

spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true # 开启从注册中心动态创建路由的功能，利用微服务名称进行路由
      routes:
        - id: payment_route # 路由的id,没有规定规则但要求唯一,建议配合服务名
          #匹配后提供服务的路由地址
#          uri: http://localhost:8001
          #写法就是 lb://服务名称
          uri: lb://cloud-payment-service
          predicates:
            - Path=/payment/get/** # 断言，路径相匹配的进行路由

        - id: payment_route2
#          uri: http://localhost:8001
          uri: lb://cloud-payment-service
          predicates:
            - Path=/payment/lb/** #断言,路径相匹配的进行路由
#            - After=2020-03-12T15:44:15.064+08:00[Asia/Shanghai]
#            - Cookie=username,yrq  #带Cookie，kv键值对 v是正则表达式
#            - Header=X-Request-Id,\d+ #请求头要有 X-Request-Id属性并且值为整数的正则表达式
#            - Host=**.yrq.com #请求头要有 X-Request-Id属性并且值为整数的正则表达式
#            - Method=GET
#            - Query=username,\d+
#            curl http://localhost:9527/payment/lb?username=10 --cookie "username=yrq" -H "X-Request-Id:10" -H "Host:www.yrq.com"

  datasource:
    # 当前数据源操作类型
    type: com.alibaba.druid.pool.DruidDataSource
    # mysql驱动类
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8
    username: root
    password: root

mybatis:
  mapper-locations: classpath*:mapper/*.xml
  type-aliases-package: com.yrq.springcloud.entity

eureka:
  instance:
    hostname: cloud-gateway-service
  client:
    #true 表示将自己注册进入Eureka 默认为true
    register-with-eureka: true
    #false 表示自己端就是注册中心，我的职责就是维护服务实例，并不需要去检索服务
    fetchRegistry: true
    service-url:
      #      设置与eureka server交互的地址查询服务和注册服务都需要依赖这个地址
      #      defaultZone: http://localhost:7001/eureka/
      defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka

